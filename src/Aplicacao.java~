import java.util.Scanner;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class Aplicacao {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ListaCorridas lista = new ListaCorridas("Minhas Corridas");
        int opcao;

        exibirLogo();

        do {
            System.out.println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
            System.out.println("‚ïë     CONTROLE DE CORRIDAS üèÉ     ‚ïë");
            System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
            System.out.println("‚ïë 1) Cadastrar nova corrida        ‚ïë");
            System.out.println("‚ïë 2) Listar corridas por data      ‚ïë");
            System.out.println("‚ïë 3) Buscar corrida por nome       ‚ïë");
            System.out.println("‚ïë 4) Listar por dist√¢ncia          ‚ïë");
            System.out.println("‚ïë 5) Listar por dificuldade        ‚ïë");
            System.out.println("‚ïë 6) Resumo de desempenho          ‚ïë");
            System.out.println("‚ïë 7) Excluir corrida existente     ‚ïë");
            System.out.println("‚ïë 8) Modificar corrida existente   ‚ïë");
            System.out.println("‚ïë 0) Sair                          ‚ïë");
            System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
            System.out.println();
            System.out.println("üîπ Escolha uma op√ß√£o:");
            System.out.print(">>> ");

            String entrada = scanner.nextLine();
            try {
                opcao = Integer.parseInt(entrada);
            } catch (NumberFormatException e) {
                opcao = -1;
            }

            switch (opcao) {
                case 1:
                    exibirSeparador();
                    System.out.println("üîπ Cadastrar nova corrida:");
                    System.out.print(">>> Nome: ");
                    String nome = scanner.nextLine();
                    Corrida c = new Corrida(nome);

                    exibirSeparador();
                    System.out.print("Digite a data (dd/MM/yyyy) ou ENTER para hoje:\n>>> ");
                    String dataStr = scanner.nextLine();
                    validarData(c, dataStr);

                    exibirSeparador();
                    System.out.print("Digite dist√¢ncia (m):\n>>> ");
                    c.setDistancia(Integer.parseInt(scanner.nextLine()));

                    exibirSeparador();
                    System.out.print("Digite tempo (min):\n>>> ");
                    c.setTempo(Integer.parseInt(scanner.nextLine()));

                    exibirSeparador();
                    System.out.print("Digite dificuldade (1 a 10):\n>>> ");
                    c.setDificuldade(Integer.parseInt(scanner.nextLine()));
                    lista.adicionarCorrida(c);

                    exibirSeparador();
                    System.out.println("Corrida cadastrada com sucesso!");
                    break;
                case 2:
                    exibirSeparador();
                    System.out.println("üîπ Lista de corridas por data:");
                    for (Corrida rc : lista.listarPorData()) System.out.println(rc);
                    break;
                case 3:
                    exibirSeparador();
                    System.out.print("üîπ Buscar corrida por nome:\n>>> ");
                    String termo = scanner.nextLine();
                    for (Corrida rc : lista.buscarPorNome(termo)) System.out.println(rc);
                    break;
                case 4:
                    exibirSeparador();
                    System.out.println("üîπ Lista de corridas por dist√¢ncia:");
                    for (Corrida rc : lista.listarPorDistanciaENome()) System.out.println(rc);
                    break;
                case 5:
                    exibirSeparador();
                    System.out.println("üîπ Lista de corridas por dificuldade:");
                    for (Corrida rc : lista.listarPorDificuldade()) System.out.println(rc);
                    break;
                case 6:
                    exibirSeparador();
                    System.out.println("üîπ Resumo de desempenho:");
                    System.out.println("N√∫mero de corridas: " + lista.getNumeroCorridas());
                    System.out.println("Dist√¢ncia total: " + lista.getDistanciaTotal() + "m");
                    System.out.println("Tempo total: " + lista.getTempoTotal() + "min");
                    System.out.printf("Tempo m√©dio: %.2fmin\n", lista.getTempoMedio());
                    break;
                case 7:
                    exibirSeparador();
                    System.out.print("üîπ Excluir corrida existente:\n>>> Parte do nome: ");
                    String del = scanner.nextLine();
                    boolean removed = lista.removerPorTrechoNome(del);
                    System.out.println(removed ? "Corrida exclu√≠da." : "Nenhuma corrida √∫nica encontrada.");
                    break;
                case 8:
                    exibirSeparador();
                    System.out.println("üîπ Modificar corrida existente:");
                    if (lista.getNumeroCorridas() == 0) {
                        System.out.println("Nenhuma corrida cadastrada.");
                        break;
                    }
                    // listar com √≠ndice
                    for (int i = 0; i < lista.getNumeroCorridas(); i++) {
                        System.out.println(i + ": " + lista.listarPorData().get(i));
                    }
                    System.out.print(">>> √çndice da corrida: ");
                    int idx = Integer.parseInt(scanner.nextLine());
                    if (idx < 0 || idx >= lista.getNumeroCorridas()) {
                        System.out.println("√çndice inv√°lido.");
                        break;
                    }
                    Corrida sel = lista.listarPorData().get(idx);
                    // submenu campo
                    System.out.println("Selecione o campo (1-Nome 2-Data 3-Dist√¢ncia 4-Tempo 5-Dificuldade):");
                    System.out.print(">>> Campo: ");
                    int campo = Integer.parseInt(scanner.nextLine());
                    System.out.print("Digite o novo valor:\n>>> ");
                    String valor = scanner.nextLine();
                    sel.modificar(campo, valor);
                    System.out.println("Corrida modificada com sucesso.");
                    break;
                case 0:
                    exibirSeparador();
                    System.out.println("üî∏ Encerrando o programa...");
                    break;
                default:
                    System.out.println();
                    System.out.println("üî∏ Op√ß√£o inv√°lida. Tente novamente.");
                    System.out.println();
            }
        } while (opcao != 0);

        scanner.close();
    }

    public static void validarData(Corrida corrida,String data) {
        if (data.isBlank()) corrida.setData(LocalDate.now());
        else corrida.setData(LocalDate.parse(data, DateTimeFormatter.ofPattern("dd/MM/yyyy")));
        if (!data.isBlank()) corrida.setData(LocalDate.parse(data, DateTimeFormatter.ofPattern("dd/MM/yyyy")));
    }

    public static void exibirLogo() {
        System.out.println("           _________ _______  _______  _______  _        _______  _______ ");
        System.out.println("|\\     /|  \\__   __/(  ____ )(  ___  )(  ____ \\| \\    /\\(  ____ \\(  ____ )");
        System.out.println("( \\   / )     ) (   | (    )|| (   ) || (    \\/|  \\  / /| (    \\/| (    )|");
        System.out.println(" \\ (_) /      | |   | (____)|| (___) || |      |  (_/ / | (__    | (____)|");
        System.out.println("  ) _ (       | |   |     __)|  ___  || |      |   _ (  |  __)   |     __)");
        System.out.println(" / ( ) \\      | |   | (\\ (   | (   ) || |      |  ( \\ \\ | (      | (\\ (   ");
        System.out.println("( /   \\ )     | |   | ) \\ \\__| )   ( || (____/\\|  /  \\ \\| (____/\\| ) \\ \\__");
        System.out.println("|/     \\|     )_(   |/   \\__/|/     \\|(_______/|_/    \\/(_______/|/   \\__/");
    }
    public static void exibirSeparador() {
        System.out.println("-..- - .-. .- -.-. -.- . .-.-..- - .-. .- -.-. -.- . .-.");
    }
}
